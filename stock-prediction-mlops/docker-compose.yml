version: '3.8'
services:
  mlflow:
    build:
      context: .
      dockerfile: docker/mlflow/Dockerfile
    ports:
      - "5000:5000"
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      S3_BUCKET: ${S3_BUCKET}
    volumes:
      - mlflow-db:/mlflow

  minio:
    image: minio/minio:RELEASE.2022-10-24T18-35-07Z
    command: gateway s3 https://storage.yandexcloud.net
    ports:
      - "9000:9000"
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}
    restart: always

  lakefs:
    image: treeverse/lakefs:latest
    ports:
      - "8001:8000"
    depends_on:
      - minio
    environment:
      - LAKEFS_DATABASE_TYPE=local
      - LAKEFS_AUTH_ENCRYPT_SECRET_KEY=super-secret
      - LAKEFS_BLOCKSTORE_TYPE=s3
      - LAKEFS_BLOCKSTORE_S3_REGION=ru-central1
      - LAKEFS_BLOCKSTORE_S3_BUCKET=${S3_BUCKET}
      - LAKEFS_BLOCKSTORE_S3_ENDPOINT=http://minio:9000
      - LAKEFS_BLOCKSTORE_S3_FORCE_PATH_STYLE=true
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    volumes:
      - lakefs-data:/data

  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - mlflow

  trainer:
    build:
      context: .
      dockerfile: docker/trainer/Dockerfile
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      MLFLOW_S3_ENDPOINT_URL: https://storage.yandexcloud.net
    depends_on:
      - mlflow
      - lakefs

volumes:
  mlflow-db:
  lakefs-data:
